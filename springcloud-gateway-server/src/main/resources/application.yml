server:
  port: 8060
spring:
  redis:
    host: localhost
    port: 6379
    database: 0
  application:
      name: gateway-server
# 配置springcloud-gateway路由
  cloud:
    gateway:
      routes:
        #配置路由 ： 路由Id，路由到微服务的uri，断言(判断条件)
      - id: consul-product
        #uri: http://127.0.0.1:8020 #目标微服务请求地址
        uri: lb://consul-product #lb://根据微服务名称从注册中心中拉取服务请求路径
        predicates:
        - Path=/get/**  # 路由条件 path 路由匹配条件
        # 使用限流器 springcloud-gateway提供
        filters:
        #- name: RequestRateLimiter
        #  args:
            # 使用SpEL从容器中获取对象
        #    key-resolver: '#{@pathKeyResolver}'
            # 令牌桶每秒填充平均速率
        #    redis-rate-limiter.replenishRate: 1
            # 令牌桶上限
        #    redis-rate-limiter.burstCapacity: 3
       # - RewritePath=/consul-product/(?<segment>.*),/$\{segment} #路径重写的过滤器，在yml中$写为$\
      # 配置自动的根据微服务名称进行路由转发 http://localhost:8060/consul-product/get/3
      discovery:
        locator:
          enabled: true #开启根据服务名称进行转发
          lower-case-service-id: true # 所有以小写呈现


    # 配置consul的服务注册
    consul:
      host: 127.0.0.1 # consul服务器主机地址
      port: 8500  # consul服务器ip地址
      discovery:
        # 是否需要注册
        register: true
        # 注册的实例ID 唯一标志
        instance-id:  ${spring.application.name}:${server.port}
        # 服务名称
        service-name: ${spring.application.name}
        # 服务请求端口
        port: ${server.port}
        # 指定开启ip地址注册
        prefer-ip-address: true
        # 当前服务的请求ip
        ip-address: ${spring.cloud.client.ip-address}